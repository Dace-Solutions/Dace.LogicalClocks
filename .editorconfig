root = true

[*]
charset = utf-8
indent_style = space
indent_size = 4
max_line_length = 200
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4

[*.sh]
end_of_line = lf
insert_final_newline = true

# Yaml files
[*.{yml,yaml}]
indent_size = 2
indent_style = space

# Terraform files
[*.tf]
indent_size = 2
indent_style = space
         
# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### .NET Coding Conventions ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
# **
csharp_new_line_before_finally = true
# ?? false
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
# **
csharp_new_line_between_query_expression_clauses = true

# Organize usings
dotnet_separate_import_directive_groups = false
# ?? true
dotnet_sort_system_directives_first = false

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace:silent

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
# **
csharp_space_after_comma = true
# **
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
# **
csharp_space_after_semicolon_in_for_statement = true
# **
csharp_space_around_binary_operators = before_and_after
# **
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
# **
csharp_space_before_comma = false
# **
csharp_space_before_dot = false
# **
csharp_space_before_open_square_brackets = false
# **
csharp_space_before_semicolon_in_for_statement = false
# **
csharp_space_between_empty_square_brackets = false
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false
# **
csharp_space_between_method_declaration_name_and_open_parenthesis = false
# **
csharp_space_between_parentheses = false
# **
csharp_space_between_square_brackets = false

# Wrapping preferences
#leave code block on single line
csharp_preserve_single_line_blocks = true
#leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true

# Code-block preferences
#prefer curly braces even for one line of code
csharp_prefer_braces = when_multiline:error
csharp_prefer_simple_using_statement = true:suggestion

# Expression-bodied members
#prefer expression-bodied members for accessors
csharp_style_expression_bodied_accessors = true:suggestion
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
# **
csharp_style_expression_bodied_indexers = true:silent
# **
csharp_style_expression_bodied_lambdas = true:silent
# **
csharp_style_expression_bodied_local_functions = false:silent
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:suggestion
# **
csharp_style_expression_bodied_operators = false:silent
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties = true:suggestion

# Expression-level preferences
# **
csharp_prefer_simple_default_expression = true:suggestion
# **
csharp_style_deconstructed_variable_declaration = true:suggestion
#prefer out variables to be declared inline in the argument list of a method call when possible
csharp_style_inlined_variable_declaration = true:suggestion
#prefer local functions over anonymous functions
csharp_style_pattern_local_over_anonymous_function = true:suggestion
# **
csharp_style_prefer_index_operator = true:suggestion
# **
csharp_style_prefer_range_operator = true:suggestion
# **
csharp_style_throw_expression = true:suggestion
# **
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
# **
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:suggestion

# Expression-level preferences
# **
dotnet_style_coalesce_expression = true:suggestion
# **
dotnet_style_collection_initializer = true:suggestion
# **
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:warning
#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion
# **
dotnet_style_prefer_auto_properties = true:silent
# **
dotnet_style_prefer_compound_assignment = true:suggestion
# **
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
# **
dotnet_style_prefer_conditional_expression_over_return = true:silent
#prefer inferred anonymous type member names
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
#prefer inferred tuple element names
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
# **
dotnet_style_prefer_simplified_interpolation = true:suggestion

# var preferences
#prefer var over explicit type in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = true:suggestion
#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = true:suggestion
#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_when_type_is_apparent = true:suggestion

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# Modifier preferences
#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Modifier preferences
# ** local functions should preferably be pure functions, and hence static
csharp_prefer_static_local_function = true:suggestion
# when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# **
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
# **
csharp_style_prefer_switch_expression = true:suggestion

# ** this. and Me. preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# styleCop
# ClosingParenthesisMustBeSpacedCorrectly
dotnet_diagnostic.SA1009.severity=suggestion
# PrefixLocalCallsWithThis
dotnet_diagnostic.SA1101.severity=silent
# ClosingParenthesisMustBeOnLineOfLastParameter
dotnet_diagnostic.SA1111.severity=suggestion
# CommaMustBeOnSameLineAsPreviousParameter
dotnet_diagnostic.SA1113.severity=error
# ParameterListMustFollowDeclaration
dotnet_diagnostic.SA1114.severity=error
# ParameterMustFollowComma
dotnet_diagnostic.SA1115.severity=error

# dotnet_diagnostic.SA1117.severity=warning
# dotnet_diagnostic.SA1116.severity=warning

# ParameterMustNotSpanMultipleLines
dotnet_diagnostic.SA1118.severity=error
# ** CodeMustNotContainMultipleWhitespaceInARow
dotnet_diagnostic.SA1025.severity=silent
# ** UseStringEmptyForEmptyStrings
dotnet_diagnostic.SA1122.severity=silent
# GenericTypeConstraintsMustBeOnOwnLine
dotnet_diagnostic.SA1127.severity=silent
# ConstructorInitializerMustBeOnOwnLine
dotnet_diagnostic.SA1128.severity=suggestion
# UsingDirectivesMustBeQualified
dotnet_diagnostic.SA1135.severity=silent
# ** EnumValuesShouldBeOnSeparateLines
dotnet_diagnostic.SA1136.severity=silent

# UsingDirectivesMustBePlacedCorrectly
dotnet_diagnostic.SA1200.severity=silent

# ** ElementsMustAppearInTheCorrectOrder
dotnet_diagnostic.SA1201.severity=silent
# ?? ElementsMustBeOrderedByAccess
dotnet_diagnostic.SA1202.severity=suggestion
# StaticElementsMustAppearBeforeInstanceElements 
dotnet_diagnostic.SA1204.severity=silent

# SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives
dotnet_diagnostic.SA1208.severity=error
# dotnet_diagnostic.SA1209.severity=warning

# ** UsingDirectivesMustBeOrderedAlphabeticallyByNamespace
dotnet_diagnostic.SA1210.severity=silent

# dotnet_diagnostic.SA1211.severity=warning
# dotnet_diagnostic.SA1216.severity=warning

# ** FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.SA1309.severity=silent

# ** TypeParameterNamesMustBeginWithT
dotnet_diagnostic.SA1314.severity=silent

# FileMayOnlyContainASingleType
dotnet_diagnostic.SA1402.severity=silent

# UseTrailingCommasInMultiLineInitializers
dotnet_diagnostic.SA1413.severity=silent
# ?? SA1502: Element should not be on a single line
dotnet_diagnostic.SA1502.severity =silent
# BracesMustNotBeOmitted
dotnet_diagnostic.SA1503.severity=silent
# SingleLineCommentsMustNotBeFollowedByBlankLine
dotnet_diagnostic.SA1512.severity=silent
# ClosingBraceMustBeFollowedByBlankLine
dotnet_diagnostic.SA1513.severity=suggestion
# SingleLineCommentMustBePrecededByBlankLine
dotnet_diagnostic.SA1515.severity=suggestion
# ** ElementsMustBeSeparatedByBlankLine
dotnet_diagnostic.SA1516.severity=silent
# ElementsMustBeDocumented
dotnet_diagnostic.SA1600.severity=silent
# ** PartialElementsMustBeDocumented
dotnet_diagnostic.SA1601.severity=silent
# EnumerationItemsMustBeDocumented
# EnumerationItemsMustBeDocumented
dotnet_diagnostic.SA1602.severity=silent
# dotnet_diagnostic.SA1615.severity=suggestion
# dotnet_diagnostic.SA1616.severity=warning
# FileMustHaveHeader
dotnet_diagnostic.SA1633.severity=silent

# ** TypeParameterNamesMustBeginWithT
dotnet_diagnostic.SA1314.severity=silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

#### C# Coding Conventions ####

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

#### C# Formatting Rules ####

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none
# [CA1062] validate parameter 'request' is non-null before using it.
dotnet_diagnostic.CA1062.severity = none
# [CA1051] [CA1051] Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = none
# [CA1819] Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none
#[CA1056] Change the type of property xxxxxUrl from string to System.Uri.
dotnet_diagnostic.CA1056.severity = none
#[CA2227] Change 'Items' to be read-only by removing the property setter.
dotnet_diagnostic.CA2227.severity = none
#[CA1031] Modify 'GetHealthStatus' to catch a more specific allowed exception type, or rethrow the exception.
dotnet_diagnostic.CA1031.severity = none
#[CA1303] Method 'GetHealthStatus()' passes a literal string as parameter 'message' of a call to 'void LoggerExtensions.LogError(ILogger logger, Exception exception, string message, params object[] args)'. Retrieve the following string(s) from a resource table instead: "Mongo healthcheck failed".
dotnet_diagnostic.CA1303.severity = none
#[CA1304] The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'ProjectFolderController.UpdateProjectFolder(UpdateProjectFolderRequest)' with a call to 'string.ToLower(CultureInfo)'.
dotnet_diagnostic.CA1304.severity = none
#[CA1034] Do not nest type SearchStatusInfo. Alternatively, change its accessibility so that it is not externally visible.
dotnet_diagnostic.CA1034.severity = none
#[CA1812] Is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static members, make it static (Shared in Visual Basic).
dotnet_diagnostic.CA1812.severity = none

# RCS1194: Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = suggestion
# RCS1090: Add call to 'ConfigureAwait'
dotnet_diagnostic.RCS1090.severity = silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion